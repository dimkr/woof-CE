name: bullseye

on:
  push:
    branches:
      - ci
      - testing
    paths:
      - 'woof-distro/x86/debian/bullseye/**'
      - 'kernel-kit/**'
      - 'woof-code/**'
      - '!woof-code/support/arm_**'
      - 'woof-arch/x86/**'
      - 'merge2out'
      - '!**.svg'
      - '!**.png'
      - '!**.htm'
      - '!**.html'
      - '!**.desktop'
      - '!**.po'
      - '!**.mo'
      - '!**/README*'
  pull_request:
    branches:
      - testing
    paths:
      - 'woof-distro/x86/debian/bullseye/**'
      - 'kernel-kit/**'
      - 'woof-code/**'
      - '!woof-code/support/arm_**'
      - 'woof-arch/x86/**'
      - 'merge2out'
      - '!**.svg'
      - '!**.png'
      - '!**.htm'
      - '!**.html'
      - '!**.desktop'
      - '!**.po'
      - '!**.mo'
      - '!**/README*'
  schedule:
    - cron: '0 0 * * 4'
  workflow_dispatch:
    branches:
      - ci
      - testing
    inputs:
      version:
        description: 'Version number'
        required: true
        default: '9.0.0'
      suffix:
        description: 'Release name suffix, with leading -'
        required: false
        default: '-prepreprealpha1'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources petbuild-cache petbuild-output kernel-kit-output
        ln -s `pwd`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-local-repositories-
    - name: Prepare build environment
      run: ./ci/build_env.sh
    - name: merge2out
      run: yes "" | sudo -E linux32 ./merge2out woof-distro/x86/debian/bullseye
    - name: Set version
      if: github.event_name == 'workflow_dispatch'
      run: sudo sed -i s/^DISTRO_VERSION=.*/DISTRO_VERSION=${{ github.event.inputs.version }}/ ../woof-out_x86_x86_debian_bullseye/DISTRO_SPECS
    - name: Set compression algorithm
      if: github.event_name != 'workflow_dispatch'
      run: |
        echo | sudo tee -a ../woof-out_x86_x86_debian_bullseye/_00build.conf
        echo 'SFSCOMP="-comp lzo -Xalgorithm lzo1x_1"' | sudo tee -a ../woof-out_x86_x86_debian_bullseye/_00build.conf
    - name: 0setup
      run: |
        cd ../woof-out_x86_x86_debian_bullseye
        sudo -E linux32 ./0setup
    - name: 1download
      run: |
        cd ../woof-out_x86_x86_debian_bullseye
        sudo -E linux32 ./1download
    - name: Get cached kernel-kit output
      if: github.event_name != 'workflow_dispatch'
      id: get_kernel_kit_output_cache
      uses: actions/cache@v2
      with:
        path: kernel-kit-output
        key: ${{ github.workflow }}-kernel-kit-output-${{ hashFiles('kernel-kit/**') }}
    - name: Move cached kernel-kit output
      run: sudo mv kernel-kit-output ../woof-out_x86_x86_debian_bullseye/kernel-kit/output
    - name: Get cached ~/.ccache
      if: github.event_name != 'workflow_dispatch' && steps.get_kernel_kit_output_cache.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ github.workflow }}-ccache-${{ hashFiles('kernel-kit/**') }}
    - name: kernel-kit
      if: steps.get_kernel_kit_output_cache.outputs.cache-hit != 'true'
      run: ./ci/build_kernel.sh ../woof-out_x86_x86_debian_bullseye bullseye-build.conf
    - name: 2createpackages
      run: |
        cd ../woof-out_x86_x86_debian_bullseye
        echo | sudo -E linux32 ./2createpackages
    - name: Get cached petbuild-sources
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-petbuild-sources-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-sources-
    - name: Get cached petbuild-cache
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-cache
        key: ${{ github.workflow }}-petbuild-cache-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-cache-
    - name: Get cached petbuild-output
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-output
        key: ${{ github.workflow }}-petbuild-output-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-output-
    - name: Install 3builddistro dependencies
      run: ./ci/32bit_deps.sh
    - name: Install cdrtools
      run: |
        [ -f local-repositories/mkisofs ] || (curl -L https://sourceforge.net/projects/cdrtools/files/alpha/cdrtools-3.02a09.tar.bz2/download | tar -xjf- && cd cdrtools-3.02 && make -j`nproc` && mv mkisofs/OBJ/x86_64-linux-cc/mkisofs ../local-repositories/mkisofs)
        sudo install -m 755 local-repositories/mkisofs /usr/local/bin/mkisofs
    - name: 3builddistro
      run: |
        sudo chown -R root:root petbuild-output
        sudo mv petbuild-{sources,cache,output} ../woof-out_x86_x86_debian_bullseye/
        cd ../woof-out_x86_x86_debian_bullseye
        sudo -E HOME=/root linux32 ./3builddistro
    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dpupbullseye-${{ github.event.inputs.version }}${{ github.event.inputs.suffix }}
        release_name: dpupbullseye-${{ github.event.inputs.version }}${{ github.event.inputs.suffix }}
        draft: false
        prerelease: true
    - name: Upload ISO
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_x86_debian_bullseye/woof-output-dpupbullseye-${{ github.event.inputs.version }}/dpupbullseye-${{ github.event.inputs.version }}.iso
        asset_name: dpupbullseye-${{ github.event.inputs.version }}.iso
        asset_content_type: application/octet-stream
    - name: Upload devx
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_x86_debian_bullseye/woof-output-dpupbullseye-${{ github.event.inputs.version }}/devx_dpupbullseye_${{ github.event.inputs.version }}.sfs
        asset_name: devx_dpupbullseye_${{ github.event.inputs.version }}.sfs
        asset_content_type: application/octet-stream
    - name: Upload kernel sources
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_x86_debian_bullseye/kernel-kit/output/kernel_sources-4.19-dpupbullseye.sfs
        asset_name: kernel_sources-4.19-dpupbullseye.sfs
        asset_content_type: application/octet-stream
    - name: Move cached directories
      run: |
        sudo mv ../woof-out_x86_x86_debian_bullseye/petbuild-{sources,cache,output} .
        sudo mv ../woof-out_x86_x86_debian_bullseye/kernel-kit/output kernel-kit-output